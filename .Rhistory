source('~/Map_madagascar/CausalSelection/RCIT_cpp.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp.R')
traceback()
source('~/Map_madagascar/CausalSelection/RCIT_cpp.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp.R')
condtest <- function(x, y, z, alpha=0.05, N_bootstrap=100, test=TRUE){
fitxz <- lm(x ~ z)
fityz <- lm(y ~ z)
x <- fitxz$residuals
y <- fityz$residuals
cor_ts <- cor(x, y, use="complete")
N_obs <- length(x)
cor_vec <- c()
for(i in 1:N_bootstrap){
cor_vec[i] <- cor(x[sample(N_obs)], y, use="complete")
}
p_val <- 1 - mean(cor_ts > cor_vec)
# print(p_val)
if(test){
#TRUE means dependent
return(p_val < alpha)
}else
return(p_val)
}
print(microbenchmark(condtest(x, y, z), RCIT_wrapper(x, y, z)))
print(microbenchmark(condtest(x, y, z), RCIT_wrapper(x, y, z, n_rff = 20, n_rffz = 20)))
z <- matrix(rnorm(N*d), ncol=d)
print(microbenchmark(condtest(x, y, z), RCIT_wrapper(x, y, z, n_rff = 20, n_rffz = 20)))
d <- 10
z <- matrix(rnorm(N*d), ncol=d)
print(microbenchmark(condtest(x, y, z), RCIT_wrapper(x, y, z, n_rff = 20, n_rffz = 20)))
d <- 100
z <- matrix(rnorm(N*d), ncol=d)
print(microbenchmark(condtest(x, y, z), RCIT_wrapper(x, y, z, n_rff = 20, n_rffz = 20)))
warnings()
library(foreach)
z <- foreach(i=1:10) %do%{
print(i)
i
}
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
colnames(pc_static[[1]]) <- names(vars_list[static_index])
plot(graph_from_adjacency_matrix(pc_static[[1]]), main="Static")
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
colnames(pc_static[[1]]) <- names(vars_list[static_index])
plot(graph_from_adjacency_matrix(pc_static[[1]]), main="Static")
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
colnames(pc_static[[1]]) <- names(vars_list[static_index])
plot(graph_from_adjacency_matrix(pc_static[[1]]), main="Static")
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
source("CausalSelection/pcalg_sequential.R")
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
z <- foreach(i=1:10) %do% {
list(1, 1:2)
}
x
z[[1]]
z[[2]]
z <- foreach(i=1:10,
.combine = comb) %do% {
list(1, 1:2)
}
comb <- function(x, ...) {
lapply(seq_along(x),
function(i) c(x[[i]], lapply(list(...), function(y) y[[i]])))
}
z <- foreach(i=1:10,
.combine = comb) %do% {
list(1, 1:2)
}
z
z[[1]]
z <- foreach(i=1:10,
.combine = comb) %do% {
list(1, 1:2)
}
comb(z)
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg_seq(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
normalise_cpp2()
normalise_cpp2
pc_static <- pcalg(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
RCITcpp::RIT_wrapper(x, y, z)
RCITcpp::RIT_wrapper(runif(100), runif(100), runif(100))
RCITcpp::RCIT_wrapper(runif(100), runif(100), runif(100))
library(igraph)
setwd(paste0(Sys.getenv("HOME"), "/Map_madagascar"))
source("CausalSelection/pcalg.R")
source("CausalSelection/plot_minimal.R")
source("CausalSelection/pcalg_sequential.R")
load("CausalSelection/prewhitened.RData")
vars_full <- vars[, -1]
vars <- vars[, -(1:3)]
res_mat <- res_mat[, -(1:3)]
vars_list <- list()
res_mat_list <- list()
for(i in 1:dim(vars)[2]){
vars_list[[i]] <- vars[, i]
res_mat_list[[i]] <- res_mat[, i]
}
names(vars_list) <- colnames(vars)
names(res_mat_list) <- colnames(res_mat)
n_vars <- dim(vars)[2]
#make G_0
G_0 <- matrix(1, n_vars, n_vars)
timelags <- c(rep(0:3, 7), rep(4, 8), -1)
diag(G_0) <- 0
for(i in 1:n_vars){
G_0[i, timelags[i] < timelags] <- 0
}
alpha_use <- 0.5
pr_index <- 37
temp_index <- c(1:28, 37)
static_index <- 29:37
pc_static <- pcalg(vars_list[static_index], alpha=alpha_use, G_0[static_index, static_index])
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
traceback()
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
source('~/Map_madagascar/CausalSelection/RCIT_cpp_speed_test.R')
RCITcpp::normalise_cpp2(runif(10))
RCITcpp::normalise_cpp2(matrix(runif(10)))
